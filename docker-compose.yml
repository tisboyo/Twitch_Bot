version: "3"

services:
  bot:
    container_name: twitchbot_bot
    build: ./bot/
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - ./configs:/workspace/bot/configs/
      - ./irc_logs:/workspace/bot/irc_logs/
      - ./jsons:/workspace/bot/jsons/
      # - ./bot:/workspace/bot/
    environment:
      client_id: ${TWITCH_CLIENT_ID} #Lower cased because a framework issue
      nick: ${TWITCH_NICK}
      oauth: ${TWITCH_OAUTH}
      PUBSUB_OAUTH: ${TWITCH_PUBSUB_OAUTH}
      ADAFRUIT_IO_USER: ${ADAFRUIT_IO_USER}
      ADAFRUIT_IO_KEY: ${ADAFRUIT_IO_KEY}
      WEB_HOSTNAME: ${WEB_HOSTNAME}
      TWITCH_CHANNEL: ${TWITCH_CHANNEL}

  webserver:
    container_name: twitchbot_webserver
    build: ./web/
    restart: unless-stopped
    expose:
      - 5000
    depends_on:
      - mysql

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`${WEB_HOSTNAME}`)"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"
      - "deck-chores.webhook-subscribe.command=sh -c /workspace/web/webhook_requests.py &> /proc/1/fd/1"
      - "deck-chores.webhook-subscribe.cron=* * * * * */6 0 0"

    environment:
      WEB_HOSTNAME: ${WEB_HOSTNAME}
      CLIENT_ID: ${TWITCH_CLIENT_ID}
      PUBSUB_OAUTH: ${TWITCH_PUBSUB_OAUTH}
      TWITCH_CHANNEL: ${TWITCH_CHANNEL}
      ADAFRUIT_IO_USER: ${ADAFRUIT_IO_USER}
      ADAFRUIT_IO_KEY: ${ADAFRUIT_IO_KEY}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

    # Uncommenting these disables the requirement to re-build on updates, useful for dev.
    # volumes:
    #   - ./web:/workspace/web/

  mysql:
    container_name: twitchbot_mysql
    image: mysql:latest
    restart: unless-stopped
    volumes:
      - ./db_data:/var/lib/mysql
      - ./mysql.cnf:/etc/mysql/conf.d/custom.cnf
      - ./dropbox:/home
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TEST_LOGIN_FILE: /var/lib/mysql/.mylogin.cnf #Run mysql_config_editor set -p in container to set password

    cap_add:
      - SYS_NICE # CAP_SYS_NICE

    labels:
      - deck-chores.mysqldump.command=sh -c "mysqldump --all-databases > /home/Dropbox/twitchbot_backup/twitchbot.sql"
      - deck-chores.mysqldump.cron=* * * * * 0/6 5 0 # Every 6 hours
      - deck-chores.mysqldump-weekly.command=sh -c "mysqldump --all-databases > /home/Dropbox/twitchbot_backup/twitchbot-weekly.sql"
      - deck-chores.mysqldump-weekly.cron=* * * * sat 3 0 0 # Saturday 3am
      - deck-chores.mysqldump-monthly.command=sh -c "mysqldump --all-databases > /home/Dropbox/twitchbot_backup/twitchbot-monthly.sql"
      - deck-chores.mysqldump-monthly.cron= * * 1 * * 1 0 0 # Monthly on the 1st, 1am


  traefik:
    container_name: twitchbot_traefik
    image: traefik:v2.3
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.toml:/etc/traefik/traefik.toml"
      - "./traefik/acme.json:/acme.json"
      - "./traefik/log:/var/log"
    environment:
      - "TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL"

  fail2ban:
    container_name: twitchbot_fail2ban
    image: crazymax/fail2ban:latest
    network_mode: "host"
    environment:
      F2B_DB_PURGE_AGE: "1d"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: unless-stopped
    volumes:
      - ./traefik/log:/var/log/traefik:ro
      - ./fail2ban/data:/data

  chores:
    container_name: twitchbot_chores
    image: funkyfuture/deck-chores:1
    restart: unless-stopped
    environment:
      TIMEZONE: America/Chicago
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  dropbox:
    container_name: twitchbot_dropbox
    image: vmirage/dropbox
    restart: unless-stopped
    volumes:
      - ./dropbox:/dbox
